/* Reset bÃ¡sico: elimina mÃ¡rgenes/paddings y asegura box-sizing uniforme */
*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Estilos globales del body */
body {
    background: #696666ff;          /* Color de fondo */
    font-family: 'Roboto', sans-serif; /* Fuente principal */
    color: white;                   /* Texto en blanco */
}

/* Caja de ejemplo */
.caja {
    background: #1062ff;   /* Fondo azul */
    padding: 20px;         /* Relleno interno */
    font-size: 24px;       /* Texto grande */
    border-radius: 10px;   /* Bordes redondeados */
}

/* ==============================
   Contenedor principal con Flexbox
   ============================== */
.contenedor {
    /* --- TamaÃ±o y estructura --- */
    width: 90%;             /* Ocupa 90% del ancho disponible */
    max-width: 1000px;      /* MÃ¡ximo 1000px */
    margin: 40px auto;      /* Centrado horizontal + margen vertical */
    padding: 40px;          /* Espacio interno */
    border: 4px solid #000; /* Borde negro */
    /* height: 90vh; */      /* (Opcional) altura casi completa de la ventana */

    /* --- Activar Flexbox --- */
    display: flex;          /* Convierte al contenedor en Flexbox */
    gap: 40px;              /* Espacio entre hijos */

    /* --- DirecciÃ³n del eje principal --- 
       Define cÃ³mo se ordenan los elementos dentro del contenedor.
       row (por defecto) â†’ en fila, de izq â†’ der
       column           â†’ en columna, arriba â†’ abajo
       row-reverse      â†’ en fila, der â†’ izq
       column-reverse   â†’ en columna, abajo â†’ arriba
    */
    /* flex-direction: row; */

    /* --- Ajuste de lÃ­nea ---
       nowrap (por defecto) â†’ todos en una sola lÃ­nea
       wrap                 â†’ permite saltar a otra lÃ­nea si no caben
       wrap-reverse         â†’ lo mismo, pero hacia el lado contrario
    */
    flex-wrap: wrap;

    /* --- CombinaciÃ³n rÃ¡pida ---
       flex-flow = flex-direction + flex-wrap
    */
    /* flex-flow: row wrap; */

    /* --- DistribuciÃ³n en el eje principal ---
       justify-content controla cÃ³mo se reparte el espacio libre
       (X si es row, Y si es column).
         flex-start   â†’ todos al inicio
         flex-end     â†’ todos al final
         center       â†’ centrados
         space-betweenâ†’ mÃ¡ximo espacio entre elementos
         space-around â†’ espacio igual alrededor de cada elemento
         space-evenly â†’ espacio igual entre todos + bordes
    */
    /* justify-content: center; */

    /* --- AlineaciÃ³n en el eje transversal ---
       align-items controla cÃ³mo se alinean los hijos en el eje perpendicular.
         stretch     â†’ (por defecto) se estiran para ocupar todo
         flex-start  â†’ al inicio del eje transversal
         flex-end    â†’ al final del eje transversal
         center      â†’ centrados
         baseline    â†’ alineados segÃºn la lÃ­nea base del texto
    */
    /* align-items: flex-start; */

    /* --- AlineaciÃ³n de mÃºltiples lÃ­neas ---
       align-content entra en juego SOLO si flex-wrap crea varias filas/columnas.
       Controla cÃ³mo se distribuyen esas lÃ­neas dentro del contenedor:
         flex-start  â†’ todas arriba/izquierda
         flex-end    â†’ todas abajo/derecha
         center      â†’ todas al centro
         space-between â†’ mÃ¡ximo espacio entre lÃ­neas
         space-around  â†’ espacio igual alrededor de cada lÃ­nea
         stretch       â†’ ocupa todo el espacio disponible
    */
    /* align-content: center; */

    /*
    ðŸ“Œ Diferencia clave entre align-items y align-content:
       - align-items: cÃ³mo se acomoda cada hijo en su propia "balda"
       - align-content: cÃ³mo se acomoda todo el conjunto de "baldas"
       ðŸ‘‰ AnalogÃ­a: 
          align-content = dÃ³nde pongo el estante en la pared
          align-items   = cÃ³mo acomodo los libros dentro del estante
    */
}
